/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Option, OptionOrNullable } from '@metaplex-foundation/umi';
import {
  Serializer,
  option,
  struct,
  u64,
} from '@metaplex-foundation/umi/serializers';
import {
  IngredientType,
  IngredientTypeArgs,
  getIngredientTypeSerializer,
} from '.';

export type AddIngredientArgs = {
  amount: bigint;
  ingredientType: IngredientType;
  maxSupply: Option<bigint>;
};

export type AddIngredientArgsArgs = {
  amount: number | bigint;
  ingredientType: IngredientTypeArgs;
  maxSupply: OptionOrNullable<number | bigint>;
};

/** @deprecated Use `getAddIngredientArgsSerializer()` without any argument instead. */
export function getAddIngredientArgsSerializer(
  _context: object
): Serializer<AddIngredientArgsArgs, AddIngredientArgs>;
export function getAddIngredientArgsSerializer(): Serializer<
  AddIngredientArgsArgs,
  AddIngredientArgs
>;
export function getAddIngredientArgsSerializer(
  _context: object = {}
): Serializer<AddIngredientArgsArgs, AddIngredientArgs> {
  return struct<AddIngredientArgs>(
    [
      ['amount', u64()],
      ['ingredientType', getIngredientTypeSerializer()],
      ['maxSupply', option(u64())],
    ],
    { description: 'AddIngredientArgs' }
  ) as Serializer<AddIngredientArgsArgs, AddIngredientArgs>;
}
