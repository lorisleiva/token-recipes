/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { PublicKey } from '@metaplex-foundation/umi';
import {
  GetDataEnumKind,
  GetDataEnumKindContent,
  Serializer,
  dataEnum,
  publicKey as publicKeySerializer,
  struct,
} from '@metaplex-foundation/umi/serializers';

export type FeatureData =
  | {
      __kind: 'Fees';
      destination: PublicKey;
      mintBurn1: PublicKey;
      mintBurn2: PublicKey;
      mintBurn3: PublicKey;
      mintSkill1: PublicKey;
      mintSkill2: PublicKey;
    }
  | {
      __kind: 'AdditionalOutputs';
      mintBurn1: PublicKey;
      mintBurn2: PublicKey;
      mintBurn3: PublicKey;
      mintSkill1: PublicKey;
      mintSkill2: PublicKey;
    };

export type FeatureDataArgs = FeatureData;

/** @deprecated Use `getFeatureDataSerializer()` without any argument instead. */
export function getFeatureDataSerializer(
  _context: object
): Serializer<FeatureDataArgs, FeatureData>;
export function getFeatureDataSerializer(): Serializer<
  FeatureDataArgs,
  FeatureData
>;
export function getFeatureDataSerializer(
  _context: object = {}
): Serializer<FeatureDataArgs, FeatureData> {
  return dataEnum<FeatureData>(
    [
      [
        'Fees',
        struct<GetDataEnumKindContent<FeatureData, 'Fees'>>([
          ['destination', publicKeySerializer()],
          ['mintBurn1', publicKeySerializer()],
          ['mintBurn2', publicKeySerializer()],
          ['mintBurn3', publicKeySerializer()],
          ['mintSkill1', publicKeySerializer()],
          ['mintSkill2', publicKeySerializer()],
        ]),
      ],
      [
        'AdditionalOutputs',
        struct<GetDataEnumKindContent<FeatureData, 'AdditionalOutputs'>>([
          ['mintBurn1', publicKeySerializer()],
          ['mintBurn2', publicKeySerializer()],
          ['mintBurn3', publicKeySerializer()],
          ['mintSkill1', publicKeySerializer()],
          ['mintSkill2', publicKeySerializer()],
        ]),
      ],
    ],
    { description: 'FeatureData' }
  ) as Serializer<FeatureDataArgs, FeatureData>;
}

// Data Enum Helpers.
export function featureData(
  kind: 'Fees',
  data: GetDataEnumKindContent<FeatureDataArgs, 'Fees'>
): GetDataEnumKind<FeatureDataArgs, 'Fees'>;
export function featureData(
  kind: 'AdditionalOutputs',
  data: GetDataEnumKindContent<FeatureDataArgs, 'AdditionalOutputs'>
): GetDataEnumKind<FeatureDataArgs, 'AdditionalOutputs'>;
export function featureData<K extends FeatureDataArgs['__kind']>(
  kind: K,
  data?: any
): Extract<FeatureDataArgs, { __kind: K }> {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}
export function isFeatureData<K extends FeatureData['__kind']>(
  kind: K,
  value: FeatureData
): value is FeatureData & { __kind: K } {
  return value.__kind === kind;
}
