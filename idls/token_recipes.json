{
  "version": "0.1.0",
  "name": "token_recipes",
  "instructions": [
    {
      "name": "CreateRecipe",
      "accounts": [
        {
          "name": "base",
          "isMut": false,
          "isSigner": true,
          "desc": "An address to derive the recipe address from"
        },
        {
          "name": "recipe",
          "isMut": true,
          "isSigner": false,
          "desc": "The PDA of the new recipe account"
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": false,
          "desc": "The authority of the new recipe account"
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "desc": "The account paying for the storage fees"
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The system program"
        }
      ],
      "args": [],
      "discriminant": {
        "type": "u8",
        "value": 0
      }
    },
    {
      "name": "AddIngredient",
      "accounts": [
        {
          "name": "recipe",
          "isMut": true,
          "isSigner": false,
          "desc": "The address of the recipe account"
        },
        {
          "name": "mint",
          "isMut": true,
          "isSigner": false,
          "desc": "The mint account of the ingredient",
          "optional": true
        },
        {
          "name": "ingredientRecord",
          "isMut": true,
          "isSigner": false,
          "desc": "The ingredient record PDA to discover their recipes",
          "optional": true
        },
        {
          "name": "delegatedIngredient",
          "isMut": true,
          "isSigner": false,
          "desc": "The delegated ingredient PDA for output ingredients that takes over the mint authority",
          "optional": true
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true,
          "desc": "The authority of the recipe account and the mint authority of the ingredient if it's an output ingredient"
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "desc": "The account paying for the storage fees"
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The system program"
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The token program"
        }
      ],
      "args": [
        {
          "name": "ingredientType",
          "type": {
            "defined": "IngredientType"
          }
        },
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "destination",
          "type": {
            "option": "publicKey"
          }
        },
        {
          "name": "maxSupply",
          "type": {
            "option": "u64"
          }
        }
      ],
      "defaultOptionalAccounts": true,
      "discriminant": {
        "type": "u8",
        "value": 1
      }
    },
    {
      "name": "RemoveIngredient",
      "accounts": [
        {
          "name": "recipe",
          "isMut": true,
          "isSigner": false,
          "desc": "The address of the recipe account"
        },
        {
          "name": "mint",
          "isMut": true,
          "isSigner": false,
          "desc": "The mint account of the ingredient",
          "optional": true
        },
        {
          "name": "ingredientRecord",
          "isMut": true,
          "isSigner": false,
          "desc": "The ingredient record PDA to discover their recipes",
          "optional": true
        },
        {
          "name": "delegatedIngredient",
          "isMut": true,
          "isSigner": false,
          "desc": "The delegated ingredient PDA for output ingredients that takes over the mint authority",
          "optional": true
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true,
          "desc": "The authority of the recipe account and the mint authority of the ingredient if it's an output ingredient"
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "desc": "The account paying for the storage fees"
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The system program"
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The token program"
        }
      ],
      "args": [
        {
          "name": "ingredientType",
          "type": {
            "defined": "IngredientType"
          }
        }
      ],
      "defaultOptionalAccounts": true,
      "discriminant": {
        "type": "u8",
        "value": 2
      }
    },
    {
      "name": "ActivateRecipe",
      "accounts": [
        {
          "name": "recipe",
          "isMut": true,
          "isSigner": false,
          "desc": "The address of the recipe account"
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true,
          "desc": "The authority of the recipe account"
        }
      ],
      "args": [],
      "discriminant": {
        "type": "u8",
        "value": 3
      }
    },
    {
      "name": "PauseRecipe",
      "accounts": [
        {
          "name": "recipe",
          "isMut": true,
          "isSigner": false,
          "desc": "The address of the recipe account"
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true,
          "desc": "The authority of the recipe account"
        }
      ],
      "args": [],
      "discriminant": {
        "type": "u8",
        "value": 4
      }
    },
    {
      "name": "Craft",
      "accounts": [
        {
          "name": "recipe",
          "isMut": true,
          "isSigner": false,
          "desc": "The address of the recipe account"
        },
        {
          "name": "owner",
          "isMut": false,
          "isSigner": true,
          "desc": "The owner of the token accounts"
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "desc": "The account paying for the storage fees if we have to create associated token accounts"
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The system program"
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The token program"
        },
        {
          "name": "ataProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The associated token program"
        }
      ],
      "args": [
        {
          "name": "quantity",
          "type": "u64"
        }
      ],
      "discriminant": {
        "type": "u8",
        "value": 5
      }
    },
    {
      "name": "DeleteRecipe",
      "accounts": [
        {
          "name": "recipe",
          "isMut": true,
          "isSigner": false,
          "desc": "The address of the recipe account"
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true,
          "desc": "The authority of the recipe account, it will receive the storage fees and the potential recipe fees"
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "desc": "The account paying for the storage fees, in case an associated token account needs to be created"
        },
        {
          "name": "adminFeesDestination",
          "isMut": true,
          "isSigner": false,
          "desc": "The account that receives admin fees"
        },
        {
          "name": "feesFeaturePda",
          "isMut": false,
          "isSigner": false,
          "desc": "The fees feature PDA storing the valid shard mint"
        },
        {
          "name": "shardsMint",
          "isMut": true,
          "isSigner": false,
          "desc": "The mint account of shard tokens"
        },
        {
          "name": "shardsToken",
          "isMut": true,
          "isSigner": false,
          "desc": "The shards token account of the authority"
        },
        {
          "name": "wisdomFeaturePda",
          "isMut": false,
          "isSigner": false,
          "desc": "The wisdom feature PDA storing the valid experience mint"
        },
        {
          "name": "experienceMint",
          "isMut": true,
          "isSigner": false,
          "desc": "The mint account of experience tokens"
        },
        {
          "name": "experienceToken",
          "isMut": true,
          "isSigner": false,
          "desc": "The experience token account of the authority"
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The system program"
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The token program"
        },
        {
          "name": "ataProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The associated token program"
        }
      ],
      "args": [],
      "discriminant": {
        "type": "u8",
        "value": 6
      }
    },
    {
      "name": "AdminSetFeature",
      "accounts": [
        {
          "name": "programId",
          "isMut": false,
          "isSigner": true,
          "desc": "The program as a signer"
        },
        {
          "name": "featurePda",
          "isMut": true,
          "isSigner": false,
          "desc": "The feature PDA"
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "desc": "The account that pays for the storage fees"
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The system program"
        }
      ],
      "args": [
        {
          "name": "feature",
          "type": {
            "defined": "Feature"
          }
        }
      ],
      "discriminant": {
        "type": "u8",
        "value": 7
      }
    },
    {
      "name": "UnlockFeature",
      "accounts": [
        {
          "name": "recipe",
          "isMut": true,
          "isSigner": false,
          "desc": "The address of the recipe account"
        },
        {
          "name": "featurePda",
          "isMut": false,
          "isSigner": false,
          "desc": "The feature PDA to level up"
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true,
          "desc": "The authority of the recipe account"
        },
        {
          "name": "owner",
          "isMut": false,
          "isSigner": true,
          "desc": "The owner of the token account, usually the same as the authority"
        },
        {
          "name": "mint",
          "isMut": true,
          "isSigner": false,
          "desc": "The mint account that unlocks the feature"
        },
        {
          "name": "token",
          "isMut": true,
          "isSigner": false,
          "desc": "The token account linking the mint and owner accounts"
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The token program"
        }
      ],
      "args": [],
      "discriminant": {
        "type": "u8",
        "value": 8
      }
    },
    {
      "name": "SetFees",
      "accounts": [
        {
          "name": "recipe",
          "isMut": true,
          "isSigner": false,
          "desc": "The address of the recipe account"
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true,
          "desc": "The authority of the recipe account"
        }
      ],
      "args": [
        {
          "name": "fees",
          "type": "u64"
        }
      ],
      "discriminant": {
        "type": "u8",
        "value": 9
      }
    },
    {
      "name": "CollectFees",
      "accounts": [
        {
          "name": "recipe",
          "isMut": true,
          "isSigner": false,
          "desc": "The address of the recipe account"
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true,
          "desc": "The authority of the recipe account"
        },
        {
          "name": "adminFeesDestination",
          "isMut": true,
          "isSigner": false,
          "desc": "The account that receives admin fees"
        },
        {
          "name": "feesFeaturePda",
          "isMut": false,
          "isSigner": false,
          "desc": "The fees feature PDA storing the valid shard mint"
        },
        {
          "name": "shardsMint",
          "isMut": true,
          "isSigner": false,
          "desc": "The mint account of shard tokens"
        },
        {
          "name": "shardsToken",
          "isMut": true,
          "isSigner": false,
          "desc": "The shards token account of the authority"
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "desc": "The account paying for the storage fees, in case an associated token account needs to be created"
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The system program"
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The token program"
        },
        {
          "name": "ataProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The associated token program"
        }
      ],
      "args": [],
      "discriminant": {
        "type": "u8",
        "value": 10
      }
    },
    {
      "name": "CollectExperience",
      "accounts": [
        {
          "name": "recipe",
          "isMut": true,
          "isSigner": false,
          "desc": "The address of the recipe account"
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true,
          "desc": "The authority of the recipe account"
        },
        {
          "name": "wisdomFeaturePda",
          "isMut": false,
          "isSigner": false,
          "desc": "The wisdom feature PDA storing the valid experience mint"
        },
        {
          "name": "experienceMint",
          "isMut": true,
          "isSigner": false,
          "desc": "The mint account of experience tokens"
        },
        {
          "name": "experienceToken",
          "isMut": true,
          "isSigner": false,
          "desc": "The experience token account of the authority"
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "desc": "The account paying for the storage fees, in case an associated token account needs to be created"
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The system program"
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The token program"
        },
        {
          "name": "ataProgram",
          "isMut": false,
          "isSigner": false,
          "desc": "The associated token program"
        }
      ],
      "args": [],
      "discriminant": {
        "type": "u8",
        "value": 11
      }
    }
  ],
  "accounts": [
    {
      "name": "DelegatedIngredient",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "key",
            "type": {
              "defined": "Key"
            }
          },
          {
            "name": "mint",
            "type": "publicKey"
          },
          {
            "name": "authority",
            "type": "publicKey"
          },
          {
            "name": "counter",
            "type": "u32"
          }
        ]
      }
    },
    {
      "name": "AdditionalOutputsFeature",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "key",
            "type": {
              "defined": "Key"
            }
          },
          {
            "name": "mintBurn1",
            "type": "publicKey"
          },
          {
            "name": "mintBurn2",
            "type": "publicKey"
          },
          {
            "name": "mintBurn3",
            "type": "publicKey"
          },
          {
            "name": "mintSkill1",
            "type": "publicKey"
          },
          {
            "name": "mintSkill2",
            "type": "publicKey"
          }
        ]
      }
    },
    {
      "name": "FeesFeature",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "key",
            "type": {
              "defined": "Key"
            }
          },
          {
            "name": "adminDestination",
            "type": "publicKey"
          },
          {
            "name": "shardMint",
            "type": "publicKey"
          },
          {
            "name": "mintBurn1",
            "type": "publicKey"
          },
          {
            "name": "mintBurn2",
            "type": "publicKey"
          },
          {
            "name": "mintBurn3",
            "type": "publicKey"
          },
          {
            "name": "mintBurn4",
            "type": "publicKey"
          },
          {
            "name": "mintBurn5",
            "type": "publicKey"
          },
          {
            "name": "mintSkill1",
            "type": "publicKey"
          },
          {
            "name": "mintSkill2",
            "type": "publicKey"
          },
          {
            "name": "mintSkill3",
            "type": "publicKey"
          }
        ]
      }
    },
    {
      "name": "MaxSupplyFeature",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "key",
            "type": {
              "defined": "Key"
            }
          },
          {
            "name": "mintBurn1",
            "type": "publicKey"
          },
          {
            "name": "mintSkill1",
            "type": "publicKey"
          }
        ]
      }
    },
    {
      "name": "SolPaymentFeature",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "key",
            "type": {
              "defined": "Key"
            }
          },
          {
            "name": "mintBurn1",
            "type": "publicKey"
          },
          {
            "name": "mintBurn2",
            "type": "publicKey"
          },
          {
            "name": "mintBurn3",
            "type": "publicKey"
          },
          {
            "name": "mintBurn4",
            "type": "publicKey"
          },
          {
            "name": "mintBurn5",
            "type": "publicKey"
          },
          {
            "name": "mintBurn6",
            "type": "publicKey"
          },
          {
            "name": "mintBurn7",
            "type": "publicKey"
          },
          {
            "name": "mintBurn8",
            "type": "publicKey"
          },
          {
            "name": "mintBurn9",
            "type": "publicKey"
          },
          {
            "name": "mintSkill1",
            "type": "publicKey"
          },
          {
            "name": "mintSkill2",
            "type": "publicKey"
          },
          {
            "name": "mintSkill3",
            "type": "publicKey"
          },
          {
            "name": "mintSkill4",
            "type": "publicKey"
          },
          {
            "name": "mintSkill5",
            "type": "publicKey"
          }
        ]
      }
    },
    {
      "name": "TransferInputsFeature",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "key",
            "type": {
              "defined": "Key"
            }
          },
          {
            "name": "mintBurn1",
            "type": "publicKey"
          },
          {
            "name": "mintBurn2",
            "type": "publicKey"
          },
          {
            "name": "mintBurn3",
            "type": "publicKey"
          },
          {
            "name": "mintSkill1",
            "type": "publicKey"
          },
          {
            "name": "mintSkill2",
            "type": "publicKey"
          }
        ]
      }
    },
    {
      "name": "WisdomFeature",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "key",
            "type": {
              "defined": "Key"
            }
          },
          {
            "name": "experienceMint",
            "type": "publicKey"
          },
          {
            "name": "mintBurn1",
            "type": "publicKey"
          },
          {
            "name": "mintBurn2",
            "type": "publicKey"
          }
        ]
      }
    },
    {
      "name": "IngredientRecord",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "key",
            "type": {
              "defined": "Key"
            }
          },
          {
            "name": "input",
            "type": "bool"
          },
          {
            "name": "output",
            "type": "bool"
          },
          {
            "name": "mint",
            "type": "publicKey"
          },
          {
            "name": "recipe",
            "type": "publicKey"
          }
        ]
      }
    },
    {
      "name": "Recipe",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "key",
            "type": {
              "defined": "Key"
            }
          },
          {
            "name": "base",
            "type": "publicKey"
          },
          {
            "name": "authority",
            "type": "publicKey"
          },
          {
            "name": "status",
            "type": {
              "defined": "RecipeStatus"
            }
          },
          {
            "name": "totalCrafts",
            "type": "u64"
          },
          {
            "name": "totalCraftsWithQuantity",
            "type": "u64"
          },
          {
            "name": "fees",
            "type": "u64"
          },
          {
            "name": "accumulatedAdminFees",
            "type": "u64"
          },
          {
            "name": "accumulatedShards",
            "type": "u64"
          },
          {
            "name": "accumulatedExperience",
            "type": "u64"
          },
          {
            "name": "featureLevels",
            "type": {
              "defined": "FeatureLevels"
            }
          },
          {
            "name": "inputs",
            "type": {
              "vec": {
                "defined": "IngredientInput"
              }
            }
          },
          {
            "name": "outputs",
            "type": {
              "vec": {
                "defined": "IngredientOutput"
              }
            }
          }
        ]
      }
    }
  ],
  "types": [
    {
      "name": "FeatureLevels",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "fees",
            "type": "u8"
          },
          {
            "name": "additionalOutputs",
            "type": "u8"
          },
          {
            "name": "transferInputs",
            "type": "u8"
          },
          {
            "name": "maxSupply",
            "type": "u8"
          },
          {
            "name": "solPayment",
            "type": "u8"
          },
          {
            "name": "wisdom",
            "type": "u8"
          },
          {
            "name": "padding",
            "type": {
              "array": [
                "u8",
                10
              ]
            }
          }
        ]
      }
    },
    {
      "name": "Feature",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Fees",
            "fields": [
              {
                "defined": "FeesFeature"
              }
            ]
          },
          {
            "name": "AdditionalOutputs",
            "fields": [
              {
                "defined": "AdditionalOutputsFeature"
              }
            ]
          },
          {
            "name": "TransferInputs",
            "fields": [
              {
                "defined": "TransferInputsFeature"
              }
            ]
          },
          {
            "name": "MaxSupply",
            "fields": [
              {
                "defined": "MaxSupplyFeature"
              }
            ]
          },
          {
            "name": "SolPayment",
            "fields": [
              {
                "defined": "SolPaymentFeature"
              }
            ]
          },
          {
            "name": "Wisdom",
            "fields": [
              {
                "defined": "WisdomFeature"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "IngredientInput",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "BurnToken",
            "fields": [
              {
                "name": "mint",
                "type": "publicKey"
              },
              {
                "name": "amount",
                "type": "u64"
              }
            ]
          },
          {
            "name": "TransferToken",
            "fields": [
              {
                "name": "mint",
                "type": "publicKey"
              },
              {
                "name": "amount",
                "type": "u64"
              },
              {
                "name": "destination",
                "type": "publicKey"
              }
            ]
          },
          {
            "name": "TransferSol",
            "fields": [
              {
                "name": "lamports",
                "type": "u64"
              },
              {
                "name": "destination",
                "type": "publicKey"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "IngredientOutput",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "MintToken",
            "fields": [
              {
                "name": "mint",
                "type": "publicKey"
              },
              {
                "name": "amount",
                "type": "u64"
              }
            ]
          },
          {
            "name": "MintTokenWithMaxSupply",
            "fields": [
              {
                "name": "mint",
                "type": "publicKey"
              },
              {
                "name": "amount",
                "type": "u64"
              },
              {
                "name": "max_supply",
                "type": "u64"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "Key",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Uninitialized"
          },
          {
            "name": "Recipe"
          },
          {
            "name": "IngredientRecord"
          },
          {
            "name": "DelegatedIngredient"
          },
          {
            "name": "FeesFeature"
          },
          {
            "name": "AdditionalOutputsFeature"
          },
          {
            "name": "TransferInputsFeature"
          },
          {
            "name": "MaxSupplyFeature"
          },
          {
            "name": "SolPaymentFeature"
          },
          {
            "name": "WisdomFeature"
          }
        ]
      }
    },
    {
      "name": "RecipeStatus",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Paused"
          },
          {
            "name": "Active"
          }
        ]
      }
    },
    {
      "name": "IngredientType",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "BurnTokenInput"
          },
          {
            "name": "TransferTokenInput"
          },
          {
            "name": "MintTokenOutput"
          },
          {
            "name": "MintTokenWithMaxSupplyOutput"
          },
          {
            "name": "TransferSolInput"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "code": 0,
      "name": "DeserializationError",
      "msg": "Error deserializing an account"
    },
    {
      "code": 1,
      "name": "SerializationError",
      "msg": "Error serializing an account"
    },
    {
      "code": 2,
      "name": "InvalidProgramOwner",
      "msg": "Invalid program owner. This likely mean the provided account does not exist"
    },
    {
      "code": 3,
      "name": "InvalidPda",
      "msg": "Invalid PDA derivation"
    },
    {
      "code": 4,
      "name": "ExpectedEmptyAccount",
      "msg": "Expected empty account"
    },
    {
      "code": 5,
      "name": "ExpectedSignerAccount",
      "msg": "Expected signer account"
    },
    {
      "code": 6,
      "name": "ExpectedWritableAccount",
      "msg": "Expected writable account"
    },
    {
      "code": 7,
      "name": "AccountMismatch",
      "msg": "Account mismatch"
    },
    {
      "code": 8,
      "name": "InvalidDataSize",
      "msg": "Invalid data size"
    },
    {
      "code": 9,
      "name": "InvalidAccountKey",
      "msg": "Invalid account key"
    },
    {
      "code": 10,
      "name": "IngredientAlreadyAdded",
      "msg": "Ingredient already added"
    },
    {
      "code": 11,
      "name": "MissingIngredient",
      "msg": "Missing ingredient"
    },
    {
      "code": 12,
      "name": "InvalidMintAuthority",
      "msg": "Invalid mint authority"
    },
    {
      "code": 13,
      "name": "RecipeIsNotActive",
      "msg": "Recipe is not active"
    },
    {
      "code": 14,
      "name": "NumericalOverflow",
      "msg": "Numerical overflow"
    },
    {
      "code": 15,
      "name": "NotEnoughTokens",
      "msg": "Not enough tokens"
    },
    {
      "code": 16,
      "name": "MaximumSupplyReached",
      "msg": "Maximum supply reached"
    },
    {
      "code": 17,
      "name": "RecipeMustBeEmptyBeforeItCanBeDeleted",
      "msg": "Recipe must be empty before it can be deleted"
    },
    {
      "code": 18,
      "name": "CannotAddIngredientWithZeroAmount",
      "msg": "Cannot add an ingredient with zero amount"
    },
    {
      "code": 19,
      "name": "MissingDestinationArgument",
      "msg": "Missing destination argument"
    },
    {
      "code": 20,
      "name": "MissingMaxSupplyArgument",
      "msg": "Missing max supply argument"
    },
    {
      "code": 21,
      "name": "InvalidFeesFeature",
      "msg": "Invalid fees feature"
    },
    {
      "code": 22,
      "name": "InvalidAdditionalOutputsFeature",
      "msg": "Invalid additional outputs feature"
    },
    {
      "code": 23,
      "name": "InvalidTransferInputsFeature",
      "msg": "Invalid transfer inputs feature"
    },
    {
      "code": 24,
      "name": "InvalidMaxSupplyFeature",
      "msg": "Invalid max supply feature"
    },
    {
      "code": 25,
      "name": "InvalidSolPaymentFeature",
      "msg": "Invalid sol payment feature"
    },
    {
      "code": 26,
      "name": "MaxFeatureLevelReached",
      "msg": "Max feature level reached"
    },
    {
      "code": 27,
      "name": "InvalidMintToLevelUpFeature",
      "msg": "Invalid mint to level up feature"
    }
  ],
  "metadata": {
    "origin": "shank",
    "address": "C7zZZJpLzAehgidrbwdpBwN6RZCJo98qb55Zjep1a28T",
    "binaryVersion": "0.0.12",
    "libVersion": "0.0.12"
  }
}